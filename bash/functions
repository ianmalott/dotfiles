#!/usr/bin/env bash

# Edit + Ag: edit files containing a match and highlight those matches
function eag {
  if [ $# -ge 1 ]; then
    local matching_files=$(ag -l "$@")

    if [ "$matching_files" ]; then
      $EDITOR -p +/"$1" $matching_files
    else
      echo 'No matches found.'
    fi
  else
    echo 'Usage: eag <pattern> [<path>...]'
  fi
}

# Project-specific screen sessions
function s {
  local project=$1
  local screenrc=$PROJECTS_DIR/$project/.screenrc

  if [ "$1" == 'd' ]; then
    screen -d
  elif [ "$1" == 'ls' ]; then
    screen -ls
  elif [ -z $project ]; then
    echo "Please specify a project."
    echo "Usage: s <project>"
  elif [ ! -d $(dirname $screenrc) ]; then
    echo "Project '$project' does not exist."
  elif [ -f $screenrc ]; then
    cd $(dirname $screenrc)
    screen -dRRS $project -c $screenrc
  else
    echo "Project '$project' is missing a screenrc."
  fi
}

# Completion for s function
function _s {
  local current="${COMP_WORDS[COMP_CWORD]}"
  local options=$(cd ~/projects ; ls -d */. | sed 's|/./||')
  COMPREPLY=($(compgen -W "${options}" -- ${current}))
}
complete -F _s s

# Run tests matching pattern in ruby file
# Usage: t <filename> <pattern>
function t {
  local filename="$1"
  shift
  ruby -Itest $filename -n "/$@/"
}

# Run tests of multiple ruby files
# Usage: tm <filename> <filename>
function tm {
  for filename in "$@"; do
    echo -e "\n\n$filename\n";
    t $filename;
  done
}
