#!/bin/bash

#
# Environment
#

export EDITOR=/usr/bin/vim
export PATH=/usr/local/bin:/usr/local/sbin:$PATH
export PROJECTS_PATH=$HOME/projects
export TERM=xterm-256color

#
# Functions
#

# Project-specific screen sessions
function s {
  local project=$1
  local screenrc=$PROJECTS_PATH/$project/.screenrc

  if [ "$1" == 'd' ]; then
    screen -d
  elif [ "$1" == 'ls' ]; then
    screen -ls
  elif [ -z $project ]; then
    echo "Please specify a project."
    echo "Usage: s <project>"
  elif [ ! -d $(dirname $screenrc) ]; then
    echo "Project '$project' does not exist."
  elif [ -f $screenrc ]; then
    cd $(dirname $screenrc) # trigger rvm after_cd hook
    screen -dRRS $project -c $screenrc
  else
    echo "Project '$project' is missing a screenrc."
  fi
}

# Run tests matching pattern in file
# Usage: t <filename> <pattern>
function t {
  local filename="$1"
  shift
  ruby -Itest $filename -n "/$@/"
}

function vg {
  if [ $# -ge 2 ]; then
    local matching_files=$(grep -rl "$@")

    if [ "$matching_files" ]; then
      vim -p +/"$1" $matching_files
    else
      echo 'No matches found.'
    fi
  else
    echo 'Usage: vg <pattern> <path> [<path>...]'
  fi
}

#
# Git
#

source ~/.git-completion.bash
GIT_PS1_SHOWDIRTYSTATE=true # unstaged (*), staged (+)
GIT_PS1_SHOWSTASHSTATE=true # stashed ($)
GIT_PS1_SHOWUNTRACKEDFILES=true # untracked (%)

# Enable completion for 'g'
complete -o bashdefault -o default -o nospace -F _git g 2>/dev/null || complete -o default -o nospace -F _git g

#
# Prompt
#

PS1="\n$BLD_WHI\u$REG_RED@$REG_BLU\h $REG_CYA\w$BLD_GRE \$(__git_ps1 "%s")\n‚ùØ$DEFAULT "

#
# RVM (must be last)
#
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
